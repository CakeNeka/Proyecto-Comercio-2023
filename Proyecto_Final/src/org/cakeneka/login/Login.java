package org.cakeneka.login;

import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.cakeneka.windows.MainWindow;

public class Login extends javax.swing.JFrame {

    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost/proyectodua";
    static final String USER = "root";
    static final String PASS = "";
    static final String TABLE_NAME = "user_credentials";

    private Connection connection;
    private PreparedStatement preparedStatement;
    private ResultSet resultSet;

    public Login() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public void connect() {
        try {
            Class.forName(JDBC_DRIVER);
            connection = (com.mysql.jdbc.Connection) DriverManager.getConnection(DB_URL, USER, PASS);
        } catch (SQLException | ClassNotFoundException se) {
            se.getMessage();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        childFirstPanel = new javax.swing.JPanel();
        passwordField = new javax.swing.JPasswordField();
        userNameField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        passwordLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        signInButton = new javax.swing.JButton();
        signUpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));
        setForeground(new java.awt.Color(204, 204, 255));
        setResizable(false);

        childFirstPanel.setBackground(new java.awt.Color(255, 255, 255));
        childFirstPanel.setForeground(new java.awt.Color(51, 51, 51));
        childFirstPanel.setToolTipText("");

        passwordField.setBackground(new java.awt.Color(255, 255, 255));
        passwordField.setFont(new java.awt.Font("Yu Gothic UI", 1, 15)); // NOI18N
        passwordField.setForeground(new java.awt.Color(51, 51, 51));
        passwordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordField.setBorder(null);

        userNameField.setBackground(new java.awt.Color(255, 255, 255));
        userNameField.setFont(new java.awt.Font("Yu Gothic UI", 1, 15)); // NOI18N
        userNameField.setForeground(new java.awt.Color(51, 51, 51));
        userNameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userNameField.setBorder(null);

        jSeparator1.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator2.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator2.setForeground(new java.awt.Color(51, 51, 51));

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(62, 61, 61));
        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordLabel.setText("Contraseña");

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(62, 61, 61));
        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usernameLabel.setText("Usuario");

        signInButton.setBackground(new java.awt.Color(210, 240, 252));
        signInButton.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        signInButton.setForeground(new java.awt.Color(102, 102, 102));
        signInButton.setText("Iniciar Sesión");
        signInButton.setBorder(null);
        signInButton.setBorderPainted(false);
        signInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signInButtonActionPerformed(evt);
            }
        });

        signUpButton.setBackground(new java.awt.Color(210, 240, 252));
        signUpButton.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        signUpButton.setForeground(new java.awt.Color(102, 102, 102));
        signUpButton.setText("Registrarse");
        signUpButton.setBorder(null);
        signUpButton.setBorderPainted(false);
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout childFirstPanelLayout = new javax.swing.GroupLayout(childFirstPanel);
        childFirstPanel.setLayout(childFirstPanelLayout);
        childFirstPanelLayout.setHorizontalGroup(
            childFirstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, childFirstPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(childFirstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(signUpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userNameField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signInButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        childFirstPanelLayout.setVerticalGroup(
            childFirstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(childFirstPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(signInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(childFirstPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(childFirstPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
        String password = new String(passwordField.getPassword());
        connect();
        if (!doesUserExist()) {
            if (validateFields()) {
                executeInsertQuery();

            } else {
                if (userNameField.getText().length() < 4) {
                    JOptionPane.showMessageDialog(this, "El nombre de usuario debe tener como mínimo 4 carácteres.");
                } else if (userNameField.getText().length() > 128) {
                    JOptionPane.showMessageDialog(this, "El nombre de usuario debe tener como máximo 40 carácteres.");
                } else if (password.length() < 8) {
                    JOptionPane.showMessageDialog(this, "La contraseña debe tener como mínimo 8 carácteres.");
                } else if (password.length() > 128) {
                    JOptionPane.showMessageDialog(this, "La contraseña debe tener como máximo 128 carácteres.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "El usuario introducido ya existe.");
        }

    }//GEN-LAST:event_signUpButtonActionPerformed

    private boolean doesUserExist() {
        boolean check = false;
        try {
            executeUserNameQuery();
            while (resultSet.next()) {
                if (resultSet.getObject(1).toString() != null) {
                    if (resultSet.getObject(1).toString().equals(userNameField.getText())) {
                        check = true;
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return check;
    }

    private void executeInsertQuery() {
        String password = new String(passwordField.getPassword());
        String query = "INSERT INTO `" + TABLE_NAME + "` (`UserName`, `UserPassword`) VALUES (?,?)";
        try {
            preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, userNameField.getText());
            preparedStatement.setString(2, password);
            int result = preparedStatement.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Se he registrado correctamente. \nYa puede iniciar sesión.");
            } else {
                JOptionPane.showMessageDialog(this, "Ha ocurrido un problema. \nInténtelo de nuevo.");
            }
            connection.close();
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    private void signInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signInButtonActionPerformed
        connect();
        if (validateCredentials()) {
            dispose();
            MainWindow mainWindow = new MainWindow(userNameField.getText());
            mainWindow.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "El usuario o la contraseña son incorrectos.");
        }
    }//GEN-LAST:event_signInButtonActionPerformed

    private boolean validateCredentials() {
        return isValidUserNameSignIn() && isValidPasswordSignIn();
    }

    private boolean isValidUserNameSignIn() {
        boolean check = false;
        try {
            executeUserNameQuery();
            while (resultSet.next()) {
                if (resultSet.getObject(1).toString() != null) {
                    if (resultSet.getObject(1).toString().equals(userNameField.getText())) {
                        check = true;
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return check;
    }

    private boolean isValidPasswordSignIn() {
        boolean check = false;
        String password = new String(passwordField.getPassword());
        try {
            executePasswordQuery();
            while (resultSet.next()) {
                if (resultSet.getObject(1).toString() != null) {
                    if (resultSet.getObject(1).toString().equals(password)) {
                        check = true;
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return check;
    }

    private void executeUserNameQuery() throws SQLException {
        String query = "SELECT UserName FROM `user_credentials` WHERE UserName = '" + userNameField.getText() + "'";
        preparedStatement = connection.prepareStatement(query, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        resultSet = preparedStatement.executeQuery();
    }

    private void executePasswordQuery() throws SQLException {
        String password = new String(passwordField.getPassword());
        String query = "SELECT UserPassword FROM `user_credentials` WHERE UserName = '" + userNameField.getText() + "' AND UserPassword = '" + password + "'";
        preparedStatement = connection.prepareStatement(query, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        resultSet = preparedStatement.executeQuery();
    }

    private boolean isValidUserName() {
        return (!userNameField.getText().isBlank())
                && userNameField.getText().length() <= 39
                && userNameField.getText().length() >= 4;
    }

    private boolean isValidPassword() {
        String password = new String(passwordField.getPassword());
        return (!passwordField.toString().isBlank())
                && password.length() <= 127
                && password.length() >= 8;
    }

    private boolean validateFields() {
        return isValidUserName() && isValidPassword();
    }

    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new FlatMacLightLaf());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel childFirstPanel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton signInButton;
    private javax.swing.JButton signUpButton;
    private javax.swing.JTextField userNameField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
